import React, { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom'; // Assuming you're using react-router-dom for navigation
import './Navbar.css'; // Import the CSS file for styling
import FJLogo from '../../assets/imagessvg/foodjamLogo.svg'
import FJ from '../../assets/imagessvg/fj.svg'
import Bag from '../../assets/imagessvg/BagBottom.svg'
import Explorer from '../../assets/imagessvg/explorer.svg'
import Profile from '../../assets/imagessvg/profile.svg'
import Cross from '../../assets/imagespng/cross-button.png'
import EmptyList from '../../assets/imagespng/emptyListImg.png'
import SearchIcon from '../../assets/imagespng/search.png'
import { useDispatch, useSelector } from 'react-redux';
import { clearAuthToken, loginRequest, signupRequest } from '../../redux/actions/authActions';
import { LoginUser } from '../../services/LoginService';
import { toast } from 'react-toastify';

const Navbar = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('foodjam-user'));
  const [showSignInMenu, setShowSignInMenu] = useState(false);
  const [loginOrSignUp, setLoginOrSignUp] = useState('Login');
  const [showOTPForm, setShowOTPForm] = useState(false);
  const [loginNumber, setLoginNumber] = useState('');
  const [signupNumber, setsignupNumber] = useState('');
  const [signupName, setsignupName] = useState('');
  const [signupEmail, setsignupEmail] = useState('');
  const [otpText, setotpText] = useState('');
  const otpRecievedFromAPI = useSelector(state => state.authUser);
  const signUpResponse = useSelector(state => state.signUpUser);
  // const signUpSuccess = useSelector(state => state.signUpUser);
  const[loggedUser, setLoggedUser] = useState(null)
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const handleSignInClick = () => {setShowSignInMenu(!showSignInMenu)};
  const toggleLoginSignUp = () => setLoginOrSignUp(prevState => (prevState === 'Login' ? 'Sign Up' : 'Login'));
  
  useEffect(() => {
    const token = localStorage.getItem('foodjam-user');
    setLoggedUser(JSON.parse(token))
    setIsLoggedIn(!!token);
  }, []);
  

  const handleSignOut = () => {
    dispatch(clearAuthToken());
    localStorage.removeItem('foodjam-user');
    setIsLoggedIn(false);
    navigate('/');
  };

  const handleLoginSubmit = (event) => {
    event.preventDefault();
    const login_type = 'phone'
    console.log(login_type, loginNumber,'Login value')
    LoginUser({ login_type, phone:loginNumber})
    .then((response)=>{
      console.log(response,'OTP value')
      toast.success(response.message);
      setShowOTPForm(true);
    })
    .catch((error) => {
      console.error('Login failed:', error);
    })
  };
  
  const handleSignUpSubmit = (event) => {
      event.preventDefault();
      const login_type = 'phone'
      console.log(login_type,signupNumber,signupEmail, signupName, otpText,'Signup value');
      const userData = { login_type, phone: signupNumber, email:signupEmail, first_name:signupName, otp:otpText };
      dispatch(signupRequest(userData));
  };

  const handleOTPSubmit = (event) => {
    event.preventDefault();
    console.log({phone:loginNumber, otp:otpText})
    dispatch(loginRequest({phone:loginNumber, otp:otpText}))
  };

  useEffect(() => {
    // console.log(signUpResponse, 'sign Up response')
    if (signUpResponse.token){
      console.log(signUpResponse.token, 'sign up token')
      toast.success("Sign Up Successful");
    }
    else if (signUpResponse.error !== null) {
      console.error('Signup failed:', signUpResponse.error);
      toast.error(signUpResponse.error);
    }
  }, [signUpResponse]);

  useEffect(() => {
    if (otpRecievedFromAPI.token && !isLoggedIn) {
      navigate('/');
      setShowSignInMenu(false);
      setotpText('');
      toast.success("Login Successful");
      setIsLoggedIn(true);
    } else if (otpRecievedFromAPI.error) {
      console.log('otprecieved from api', otpRecievedFromAPI.error);
      toast.error(otpRecievedFromAPI.error);
      setLoginOrSignUp('Sign Up')
      setsignupNumber(loginNumber)
    }
  }, [otpRecievedFromAPI, isLoggedIn, navigate]);
  
  return (
    <div className='nav-bar-container'>
      <nav className="dashboard_navbar_web">
        <Link to='/' className="navbar-brand">
          <img src={FJLogo} alt="Logo"/>
        </Link>
        <div className="search_bar">
          <input type="text" placeholder="Search..." />
          <img src={SearchIcon} alt="Search" className="search-icon" />
        </div>
        <div className="navbar-collapse">
          <ul className="navMenu">
            <li><Link to="/"><img src={FJ} alt='home'/>Home</Link></li>
            <li><Link to="/event"><img src={Explorer} alt='event'/>Event</Link></li>
            <li><Link to="/explore"><img src={Explorer} alt='explorer'/>Explore</Link></li>
            <li><Link to="/foodjamstore"><img src={Bag} alt='Cart'/>Cart</Link></li>
            {isLoggedIn ? (
              <li><Link to="/profile"><img src={Profile} alt="Profile" />Profile</Link></li>
              // <button onClick={handleSignOut}>Sign Out</button>
            ) : (
              <li><Link onClick={handleSignInClick}><img src={Profile} alt='Signin'/>SignIn</Link></li>
            )}
          </ul>
        </div>
      </nav>

      <div className={`signin-menu ${showSignInMenu ? 'show-signin-menu' : ''}`}>
        <img src={Cross} alt='cross' onClick={handleSignInClick}/>
        <div className='signmeny-heading-image'>
          <div>
            {loginOrSignUp}
            <div ><span className='toggle-or'>or </span><span onClick={toggleLoginSignUp} className='toggle-text'>{ loginOrSignUp=='Login' ? 'SignUp to your account >' : 'Login to your account >'}</span></div>
          </div>
          <img src={EmptyList} alt='emptylist'/>
        </div>
        {loginOrSignUp === 'Login' ? (
          !showOTPForm ? (
            <form onSubmit={handleLoginSubmit}>
              <div className="form-group">
                <input type="tel" tabIndex="1" maxLength="10" autoComplete="off" placeholder="Phone Number" value={loginNumber} onChange={(e) => setLoginNumber(e.target.value)} required />
              </div>
              <button type="submit">Login</button>
              <div className='tnc-login'>By clicking on Login, I accept the Terms & Conditions & Privacy Policy</div>
            </form>
          ) : (
            <form onSubmit={handleOTPSubmit}>
              <div className="form-group">
                <input type="text" value={otpText} onChange={(e) => setotpText(e.target.value)} placeholder="Enter OTP" required />
              </div>
              <button type="submit">Submit OTP</button>
              <Link className='otp-page-backlink' onClick={() => setShowOTPForm(false)}>Go back to Login</Link>
              {/* <button type="button" onClick={handleResendOTP}>Resend OTP</button> */}
            </form>
          )
        ) : (
          <form onSubmit={handleSignUpSubmit}>
             <div className="form-group">
              <input type="tel" value={signupNumber} onChange={(e) => setsignupNumber(e.target.value)} tabIndex="1" maxLength="10" autoComplete="off" placeholder='Phone Number' required />
            </div>
            <div className="form-group">
              <input type="text" value={signupName} onChange={(e) => setsignupName(e.target.value)} placeholder='Your First Name' required />
            </div>
            <div className="form-group">
              <input type="email" value={signupEmail} onChange={(e) => setsignupEmail(e.target.value)} placeholder='Your Email' required />
            </div>
            <button type="submit">Sign Up</button>
            <div className='tnc-login'>By clicking on Sign Up, I accept the Terms & Conditions & Privacy Policy</div>
          </form>
        )}
      </div>

      <div className="bottom_nav_Mobile">
        <Link to="/">
        <img src={FJ} alt='home'/>
          <span>Home</span>
        </Link>
        <Link to="/explore">
        <img src={Explorer} alt='explorer'/>
          <span>Explore</span>
        </Link>
        <Link to="/foodjamstore">
        <img src={Bag} alt='Cart'/>
          <span>Cart</span>
        </Link>
        {/* <Link onClick={handleSignInClick}>
        <img src={Profile} alt='profile'/>
          <span>SignIn</span>
        </Link> */}
        {isLoggedIn ? (
              <li><Link to={`/profile/stats/${loggedUser?.account_id}`}><img src={Profile} alt="Profile" />Profile</Link></li>
            ) : (
              <li><Link onClick={handleSignInClick}><img src={Profile} alt='home'/>SignIn</Link></li>
            )}
      </div>
    </div>
  );
}

export default Navbar;
